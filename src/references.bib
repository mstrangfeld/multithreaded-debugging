@inproceedings{o2017engineering,
  title={Engineering record and replay for deployability},
  author={O'Callahan, Robert and Jones, Chris and Froyd, Nathan and Huey, Kyle and Noll, Albert and Partush, Nimrod},
  booktitle={2017 $\{$USENIX$\}$ Annual Technical Conference ($\{$USENIX$\}$$\{$ATC$\}$ 17)},
  pages={377--389},
  year={2017},
}

@article{acm2002,
  author = {Choi, Jong-Deok and Zeller, Andreas},
  year = {2002},
  month = {05},
  title = {Isolating Failure-Inducing Thread Schedules},
  volume = {27},
  journal = {ACM SIGSOFT Software Engineering Notes},
  doi = {10.1145/566171.566211},
}

@inproceedings{lidbury2019sparse,
  title={Sparse record and replay with controlled scheduling},
  author={Lidbury, Christopher and Donaldson, Alastair F},
  booktitle={Proceedings of the 40th ACM SIGPLAN Conference on Programming Language Design and Implementation},
  pages={576--593},
  year={2019},
}

@article{tchamgoue2012testing,
  title={Testing and debugging concurrency bugs in event-driven programs},
  author={Tchamgoue, Guy Martin and Kim, Kyong-Hoon and Jun, Yong-Kee},
  journal={International Journal of Advanced Science and Technology},
  volume={40},
  pages={55--68},
  year={2012},
}

@inproceedings{lucia2009concurrency,
  author={B. {Lucia} and L. {Ceze}},
  booktitle={2009 42nd Annual IEEE/ACM International Symposium on Microarchitecture (MICRO)},
  title={Finding concurrency bugs with context-aware communication graphs},
  year={2009},
  pages={553-563},
}

@inproceedings{zhan2011conseq,
  author = {Zhang, Wei and Lim, Junghee and Olichandran, Ramya and Scherpelz, Joel and Jin, Guoliang and Lu, Shan and Reps, Thomas},
  title = {ConSeq: Detecting Concurrency Bugs through Sequential Errors},
  year = {2011},
  isbn = {9781450302661},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/1950365.1950395},
  doi = {10.1145/1950365.1950395},
  booktitle = {Proceedings of the Sixteenth International Conference on Architectural Support for Programming Languages and Operating Systems},
  pages = {251–264},
  numpages = {14},
  keywords = {software testing, concurrency bugs},
  location = {Newport Beach, California, USA},
  series = {ASPLOS XVI},
}

@inproceedings{lu2007muvi,
  author = {Lu, Shan and Park, Soyeon and Hu, Chongfeng and Ma, Xiao and Jiang, Weihang and Li, Zhenmin and Popa, Raluca A. and Zhou, Yuanyuan},
  title = {MUVI: Automatically Inferring Multi-Variable Access Correlations and Detecting Related Semantic and Concurrency Bugs},
  year = {2007},
  isbn = {9781595935915},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/1294261.1294272},
  doi = {10.1145/1294261.1294272},
  booktitle = {Proceedings of Twenty-First ACM SIGOPS Symposium on Operating Systems Principles},
  pages = {103–116},
  numpages = {14},
  keywords = {bug detection, variable correlation, concurrency bug},
  location = {Stevenson, Washington, USA},
  series = {SOSP ’07},
}

@inproceedings{tu2019go,
  author = {Tu, Tengfei and Liu, Xiaoyu and Song, Linhai and Zhang, Yiying},
  title = {Understanding Real-World Concurrency Bugs in Go},
  year = {2019},
  isbn = {9781450362405},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/3297858.3304069},
  doi = {10.1145/3297858.3304069},
  booktitle = {Proceedings of the Twenty-Fourth International Conference on Architectural Support for Programming Languages and Operating Systems},
  pages = {865–878},
  numpages = {14},
  keywords = {bug study, go, concurrency bug},
  location = {Providence, RI, USA},
  series = {ASPLOS ’19},
}

@inproceedings{tzoref2007instrumenting,
  author = {Tzoref, Rachel and Ur, Shmuel and Yom-Tov, Elad},
  title = {Instrumenting Where It Hurts: An Automatic Concurrent Debugging Technique},
  year = {2007},
  isbn = {9781595937346},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/1273463.1273469},
  doi = {10.1145/1273463.1273469},
  booktitle = {Proceedings of the 2007 International Symposium on Software Testing and Analysis},
  pages = {27–38},
  numpages = {12},
  keywords = {concurrency, feature selection, debugging},
  location = {London, United Kingdom},
  series = {ISSTA ’07},
}

@inproceedings{lu2008mistakes,
  author = {Lu, Shan and Park, Soyeon and Seo, Eunsoo and Zhou, Yuanyuan},
  title = {Learning from Mistakes: A Comprehensive Study on Real World Concurrency Bug Characteristics},
  year = {2008},
  isbn = {9781595939586},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/1346281.1346323},
  doi = {10.1145/1346281.1346323},
  booktitle = {Proceedings of the 13th International Conference on Architectural Support for Programming Languages and Operating Systems},
  pages = {329–339},
  numpages = {11},
  keywords = {bug characteristics, concurrent program, concurrency bug},
  location = {Seattle, WA, USA},
  series = {ASPLOS XIII},
}

@inproceedings{serebry2009threadsanitizer,
  author = {Serebryany, Konstantin and Iskhodzhanov, Timur},
  title = {ThreadSanitizer: Data Race Detection in Practice},
  year = {2009},
  isbn = {9781605587936},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/1791194.1791203},
  doi = {10.1145/1791194.1791203},
  booktitle = {Proceedings of the Workshop on Binary Instrumentation and Applications},
  pages = {62–71},
  numpages = {10},
  keywords = {testing, dynamic data race detection, concurrency bugs, Valgrind},
  location = {New York, New York, USA},
  series = {WBIA ’09}
}

@InBook{peytonjones2007beautiful,
  author = {Peyton Jones, Simon},
  title = {Beautiful concurrency},
  booktitle = {Beautiful code},
  year = {2007},
  month = {January},
  publisher = {O'Reilly},
  url = {https://www.microsoft.com/en-us/research/publication/beautiful-concurrency/},
  edition = {Beautiful code},
}

@article{qadeer2004kiss,
  title={KISS: keep it simple and sequential},
  author={Qadeer, Shaz and Wu, Dinghao},
  journal={Acm sigplan notices},
  volume={39},
  number={6},
  pages={14--24},
  year={2004},
  publisher={ACM New York, NY, USA}
}

@inproceedings{musuvathi2008finding,
  title={Finding and Reproducing Heisenbugs in Concurrent Programs.},
  author={Musuvathi, Madanlal and Qadeer, Shaz and Ball, Thomas and Basler, Gerard and Nainar, Piramanayagam Arumuga and Neamtiu, Iulian},
  booktitle={OSDI},
  volume={8},
  pages={267--280},
  year={2008}
}

@inproceedings{gray1986computers,
  title={Why do computers stop and what can be done about it?},
  author={Gray, Jim},
  booktitle={Symposium on reliability in distributed software and database systems},
  pages={3--12},
  year={1986},
  organization={Los Angeles, CA, USA}
}

%--EXTRA--%
@article{kernighan1974elements,
  title={The elements of programming style},
  author={Kernighan, Brian W and Plauger, Phillip James},
  journal={New York: McGraw-Hill, 1974, 2nd ed.},
  year={1974}
}

@misc{goRaceDetector,
  title = {Data Race Detector},
  url = {https://golang.org/doc/articles/race_detector.html},
  note = {Accessed: 2020-05-04}
}

@misc{threadSanitizer,
  title = {ThreadSanitizer project: documentation, source code, dynamic annotations, unit tests},
  url = {https://github.com/google/sanitizers},
  note = {Accessed: 2020-05-09}
}

@inproceedings{makinen2014testing,
  author = {Makinen, Simo and Münch, Jürgen},
  year = {2014},
  month = {01},
  pages = {},
  title = {Effects of Test-Driven Development: A Comparative Analysis of Empirical Studies},
  volume = {166},
  journal = {Lecture Notes in Business Information Processing},
  doi = {10.1007/978-3-319-03602-1_10}
}
